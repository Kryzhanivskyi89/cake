{"mappings":"YAGA,IAAMA,EAAO,CACXC,YAAaC,SAASC,cAAc,sBACpCC,UAAWF,SAASC,cAAc,WAG9BE,EAAQ,CACZC,WAAW,KACXC,UAAS,EACTC,MAAA,W,WAEMC,KAAKF,WAGTE,KAAKF,UAAW,EAChBE,KAAKH,WAAaI,aAAY,WAC5B,IA0BaC,EACXC,EACAC,EACAC,EACAC,EAGAC,EAEAC,EAEAC,EAEAC,EAvCIC,EAAY,IAAIC,KAAM,uBAAyB,IAAIA,KACnDC,GAyBOX,EAzBUS,EA6BrBL,EAAa,IADbD,EAAgB,IADhBD,EAAkB,IADlBD,EAAS,OAMTI,EAAOO,EAAeC,KAAKC,MAAMd,EAAKI,IAEtCE,EAAQM,EAAeC,KAAKC,MAAMd,EAAMI,EAAOD,IAE/CI,EAAUK,EAAeC,KAAKC,MAAMd,EAAOI,EAAOD,EAAQD,IAE1DM,EAAUI,EAAeC,KAAKC,MAAMd,EAAQI,EAAOD,EAAQD,EAAUD,IAEpE,CAAEI,OAAMC,QAAOC,UAASC,YAtCtBC,GAAa,MAChBM,cAAcC,EAAKrB,YACnBqB,EAAKpB,UAAW,GAiBxB,SAAyBqB,G,IAAEZ,EAAFY,EAAEZ,KAAMC,EAARW,EAAQX,MAAOC,EAAfU,EAAeV,QAASC,EAAxBS,EAAwBT,QAC/CnB,EAAKI,UAAUyB,YAAc,GAAWC,OAARd,EAAK,KAAYc,OAATb,EAAM,KAAca,OAAXZ,EAAQ,KAAWY,OAARX,E,CAhBxDY,CAAgBT,E,GACf,K,GAUP,SAASC,EAAeS,GACtB,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,CALnClC,EAAKC,YAAYkC,iBAAiB,SAAS,WACzC9B,EAAMG,O","sources":["src/js/timer.js"],"sourcesContent":["// import flatpickr from \"flatpickr\";\n// import \"flatpickr/dist/flatpickr.min.css\";\n\nconst refs = {\n  startButton: document.querySelector('button[data-start]'),\n  clockFace: document.querySelector('.timer'),\n}\n\nconst timer = {\n  intervalId:null,\n  isActive:false,\n  start() {\n    \n    if (this.isActive) {\n      return;\n    };    \n    this.isActive = true;    \n    this.intervalId = setInterval(() => {\n      const deltaTime = new Date (\"2024-01-01 00:00:00\") - new Date;\n      const time = convertMs(deltaTime);\n\n      if ( deltaTime <= 1000) {\n        clearInterval(this.intervalId);        \n        this.isActive = false;        \n      };\n      updateClockFace(time)      \n    }, 1000);\n  }, \n};\n\n// timer.start()\n\nrefs.startButton.addEventListener('click', () => {\n  timer.start()\n  });\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n};\n\nfunction updateClockFace({ days, hours, minutes, seconds }) {\n  refs.clockFace.textContent = `${days}:${hours}:${minutes}:${seconds}`;\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = addLeadingZero(Math.floor(ms / day));\n  // Remaining hours\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  // Remaining minutes\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  // Remaining seconds\n  const seconds = addLeadingZero(Math.floor((((ms % day) % hour) % minute) / second));\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["$67b5ad8caac4e087$var$refs","startButton","document","querySelector","clockFace","$67b5ad8caac4e087$var$timer","intervalId","isActive","start","this","setInterval","ms","second","minute","hour","day","days","hours","minutes","seconds","deltaTime","Date","time","$67b5ad8caac4e087$var$addLeadingZero","Math","floor","clearInterval","_this","param","textContent","concat","$67b5ad8caac4e087$var$updateClockFace","value","String","padStart","addEventListener"],"version":3,"file":"index.e9f69217.js.map"}