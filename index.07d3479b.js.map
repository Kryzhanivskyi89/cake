{"mappings":"AEAA,qCAAqC;AACrC,6CAA6C;AAE7C,MAAM,EAAO,CACX,YAAa,SAAS,aAAa,CAAC,sBACpC,UAAW,SAAS,aAAa,CAAC,SACpC,EAEM,EAAQ,CACZ,WAAW,KACX,SAAS,CAAA,EACT,QAEM,IAAI,CAAC,QAAQ,GAGjB,IAAI,CAAC,QAAQ,CAAG,CAAA,EAChB,IAAI,CAAC,UAAU,CAAG,YAAY,KAC5B,IAAM,EAAY,IAAI,KAAM,uBAAyB,IAAI,KACnD,EAAO,AAyBnB,SAAmB,CAAE,EAEnB,IAEM,EAAM,MAGN,EAAO,EAAe,KAAK,KAAK,CAAC,EAAK,IAEtC,EAAQ,EAAe,KAAK,KAAK,CAAE,EAAK,EANjC,OAQP,EAAU,EAAe,KAAK,KAAK,CAAG,EAAK,EARpC,KADE,MAWT,EAAU,EAAe,KAAK,KAAK,CAAC,EAAQ,EAVrC,KADE,IADA,MAcf,MAAO,CAAE,KAAA,EAAM,MAAA,EAAO,QAAA,EAAS,QAAA,CAAQ,CACzC,C,2D;CAzC6B,GAElB,GAAa,MAChB,cAAc,IAAI,CAAC,UAAU,EAC7B,IAAI,CAAC,QAAQ,CAAG,CAAA,GAElB,AAeN,SAAyB,CAAA,KAAE,CAAI,CAAA,MAAE,CAAK,CAAA,QAAE,CAAO,CAAA,QAAE,CAAO,CAAE,EACxD,EAAK,SAAS,CAAC,WAAW,CAAG,CAAC,EAAE,EAAK,CAAC,EAAE,EAAM,CAAC,EAAE,EAAQ,CAAC,EAAE,EAAQ,CAAC,AACvE,EAjBsB,EAClB,EAAG,KACL,CACF,EAQA,SAAS,EAAe,CAAK,EAC3B,OAAO,OAAO,GAAO,QAAQ,CAAC,EAAG,IACnC,CARA,gBAAgB;AAEhB,EAAK,WAAW,CAAC,gBAAgB,CAAC,QAAS,KACzC,EAAM,KAAK,EACX","sources":["<anon>","src/index.js","src/js/timer.js"],"sourcesContent":["// import flatpickr from \"flatpickr\";\n// import \"flatpickr/dist/flatpickr.min.css\";\nconst $7e81353768b819eb$var$refs = {\n    startButton: document.querySelector(\"button[data-start]\"),\n    clockFace: document.querySelector(\".timer\")\n};\nconst $7e81353768b819eb$var$timer = {\n    intervalId: null,\n    isActive: false,\n    start () {\n        if (this.isActive) return;\n        this.isActive = true;\n        this.intervalId = setInterval(()=>{\n            const deltaTime = new Date(\"2024-01-01 00:00:00\") - new Date;\n            const time = $7e81353768b819eb$var$convertMs(deltaTime);\n            if (deltaTime <= 1000) {\n                clearInterval(this.intervalId);\n                this.isActive = false;\n            }\n            $7e81353768b819eb$var$updateClockFace(time);\n        }, 1000);\n    }\n};\n// timer.start()\n$7e81353768b819eb$var$refs.startButton.addEventListener(\"click\", ()=>{\n    $7e81353768b819eb$var$timer.start();\n});\nfunction $7e81353768b819eb$var$addLeadingZero(value) {\n    return String(value).padStart(2, \"0\");\n}\nfunction $7e81353768b819eb$var$updateClockFace({ days: days, hours: hours, minutes: minutes, seconds: seconds }) {\n    $7e81353768b819eb$var$refs.clockFace.textContent = `${days}:${hours}:${minutes}:${seconds}`;\n}\nfunction $7e81353768b819eb$var$convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n    // Remaining days\n    const days = $7e81353768b819eb$var$addLeadingZero(Math.floor(ms / day));\n    // Remaining hours\n    const hours = $7e81353768b819eb$var$addLeadingZero(Math.floor(ms % day / hour));\n    // Remaining minutes\n    const minutes = $7e81353768b819eb$var$addLeadingZero(Math.floor(ms % day % hour / minute));\n    // Remaining seconds\n    const seconds = $7e81353768b819eb$var$addLeadingZero(Math.floor(ms % day % hour % minute / second));\n    return {\n        days: days,\n        hours: hours,\n        minutes: minutes,\n        seconds: seconds\n    };\n}\n\n\n\n\n//# sourceMappingURL=index.07d3479b.js.map\n","import './js/timer'","// import flatpickr from \"flatpickr\";\n// import \"flatpickr/dist/flatpickr.min.css\";\n\nconst refs = {\n  startButton: document.querySelector('button[data-start]'),\n  clockFace: document.querySelector('.timer'),\n}\n\nconst timer = {\n  intervalId:null,\n  isActive:false,\n  start() {\n    \n    if (this.isActive) {\n      return;\n    };    \n    this.isActive = true;    \n    this.intervalId = setInterval(() => {\n      const deltaTime = new Date (\"2024-01-01 00:00:00\") - new Date;\n      const time = convertMs(deltaTime);\n\n      if ( deltaTime <= 1000) {\n        clearInterval(this.intervalId);        \n        this.isActive = false;        \n      };\n      updateClockFace(time)      \n    }, 1000);\n  }, \n};\n\n// timer.start()\n\nrefs.startButton.addEventListener('click', () => {\n  timer.start()\n  });\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n};\n\nfunction updateClockFace({ days, hours, minutes, seconds }) {\n  refs.clockFace.textContent = `${days}:${hours}:${minutes}:${seconds}`;\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = addLeadingZero(Math.floor(ms / day));\n  // Remaining hours\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  // Remaining minutes\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  // Remaining seconds\n  const seconds = addLeadingZero(Math.floor((((ms % day) % hour) % minute) / second));\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["$7e81353768b819eb$var$refs","startButton","document","querySelector","clockFace","$7e81353768b819eb$var$timer","intervalId","isActive","start","setInterval","deltaTime","Date","time","$7e81353768b819eb$var$convertMs","ms","day","hour","days","$7e81353768b819eb$var$addLeadingZero","Math","floor","hours","minute","minutes","second","seconds","clearInterval","$7e81353768b819eb$var$updateClockFace","textContent","value","String","padStart","addEventListener"],"version":3,"file":"index.07d3479b.js.map"}